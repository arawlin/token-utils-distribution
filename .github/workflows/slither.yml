name: Slither Analysis

on: [pull_request_target]

jobs:
  analyze:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Slither
        uses: crytic/slither-action@v0.4.1
        id: slither
        with:
          node-version: 20
          fail-on: none
          slither-args: --checklist --markdown-root ${{ github.server_url }}/${{ github.repository }}/blob/${{ github.sha }}/

      - name: Create/update checklist as PR comment
        uses: actions/github-script@v8
        env:
          REPORT: ${{ steps.slither.outputs.stdout }}
        with:
          script: |
            const header = '# Slither report'
            const body = process.env.REPORT
            const comment = [header, body].join("\n");

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.number,
            });

            const botComment = comments.find(
              (comment) =>
                // github-actions bot user
                comment.user.login === 'github-actions[bot]' && comment.body.startsWith(header),
            );

            const commentFn = botComment ? "updateComment" : "createComment";

            await github.rest.issues[commentFn]({
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment,
              ...(botComment
              ? { comment_id: botComment.id }
              : { issue_number: context.payload.number }),
            });
